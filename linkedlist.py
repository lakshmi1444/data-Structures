# -*- coding: utf-8 -*-
"""LinkedList.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BfISDOQfXOK-phxPXHXX5r2g5Hc2_eNH
"""

class Node:
  def __init__(self,data,next=None):
    self.data = data
    self.next = next

class LinkedList:
  def __init__(self):
    self.head= None
  def insert_at_begining(self,data):
    if self.head is None:
      self.head =Node(data)
    else:
      print(self.head.data)
      self.head= Node(data,self.head)
  def insert_at_end(self,data):
    if self.head is None:
      self.head = Node(data)
      return
    it = self.head
    while it.next:
      it = it.next
    it.next =Node(data,None)
  def insert_at_index(self,index,data):
    
    
    if index ==0:
      self.insert_at_begining(data)
      return 
   
    count =0
    it = self.head
    while it :
      if count == index -1:
        address = it.next
        it.next = Node(data,address)
        break
      it = it.next
      count += 1

  def lengthofLinkedList(self):
    count =0
    it = self.head
    while it :
      it = it.next
      count +=1
    return count

      
  def delete_at_index(self,index):
    if index <0 and index >self.lengthofLinkedList():
      raise Exception("Invalid Exception ")
    count =0
    it = self.head
    if index == 0:
      self.head= self.head.next
      return
    while it:
       if  count==index-1:
         address = it.next.next
         it.next= address
         break

       else:
         it = it.next
         count += 1 
  def insert_values(self,values):
    self.head  = None
    for data in values:
      self.insert_at_end(data)

  def printLinkedList(self):
    if self.head is not None:
      it = self.head
      llstr = ""
      while it:
        llstr += str(it.data)+" ---> "
        it = it.next
      print(llstr)

ll= LinkedList()
ll.insert_at_begining(3)
# ll.printLinkedList()
ll.insert_at_begining(6)
# ll.printLinkedList()
ll.insert_at_end(4)
ll.printLinkedList()

print("insert at 0")
ll.insert_at_index(0,9)
ll.printLinkedList()
ll.insert_at_index(3,5)
ll.printLinkedList()
ll.delete_at_index(0)
ll.printLinkedList()
ll.lengthofLinkedList()
ll.insert_values([1,2,2,4])
ll.printLinkedList()

